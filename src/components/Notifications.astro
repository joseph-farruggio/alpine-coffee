<div x-data="notifications" class="fixed right-3 bottom-3 flex flex-col gap-y-4 w-80" @order-complete.window="push($event.detail)">
    <template x-for="notication in notifications" :key="notication.id">
        <div 
            x-data="{ show: false }"
            x-init="setTimeout(() => show = true, 50); setTimeout(() => show = false, 3000)"
            x-show="show" 
            x-transition:enter="transition ease-out duration-300"
            x-transition:enter-start="opacity-0 transform translate-x-20 scale-90"
            x-transition:enter-end="opacity-100 transform translate-x-0 scale-100"
            x-transition:leave="transition ease-in duration-300"
            x-transition:leave-start="opacity-100 transform translate-x-0 scale-100"
            x-transition:leave-end="opacity-0 transform translate-x-20 scale-90"
            class="bg-cyan-400/10 text-cyan-300 px-2 py-2 rounded-lg ring-1 ring-instet ring-cyan-400/30" 
            x-text="notication.message"></div>  
    </template>
</div>

<script>
    import Alpine from 'alpinejs'

    Alpine.data('notifications', () => ({
        notifications: [],
        push(order) {
            let notication = {
                id: order.id,
                message: order.customer ? `${order.customer}, your ${order.title.toLowerCase()} is ready.` : `A ${order.title.toLowerCase()} is ready.`
            }
            
            order.deleted = false
            this.notifications.push(notication)
            
            // Notifications are shown/hidden with their own timer
            // This just cleans up the array
            setTimeout( () => {
                // remove items by id
                this.notifications = this.notifications.filter(item => item.id !== order.id)
            }, 5000)
        }
    }))
</script>